{"version":3,"sources":["app.module.css","components/globe/Controls.ts","components/globe/Globe.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","app","appHeader","threeContainer","Controls","domObject","drag","zoomIn","zoomOut","_this","this","Object","classCallCheck","coordinates","touchZoomDistance","zoomStartHandler","e","isTwoTouches","preventDefault","Math","hypot","touches","pageX","pageY","zoomMoveHandler","newDistance","delta","console","log","abs","mouseWheelHandler","max","min","deltaY","getCoordinates","MouseEvent","x","clientX","y","clientY","downHandler","_this$getCoordinates","startX","startY","currentX","currentY","moveHandler","_this$getCoordinates2","isInteractionStarted","endHandler","get","addEventListener","Globe","container","controls","renderer","scene","camera","center","globe","clouds","initRenderer","initScene","initCamera","initCenter","lookAt","ambientLight","initAmbientLight","add","directionalLight","initDirectionalLight","createGlobe","createClouds","stars","initStarField","bind","THREE","setSize","window","innerWidth","innerHeight","appendChild","domElement","up","position","set","loader","rotateX","degToRad","map","load","bumpMap","bumpScale","specularMap","specular","transparent","side","deltaX","radPerPixel","PI","deltaPhi","deltaTheta","pos","sub","radius","length","theta","acos","z","phi","atan2","sin","cos","multiplyScalar","renderFuncs","push","rotateZ","aspect","clientWidth","clientHeight","updateProjectionMatrix","render","lastTimeMsec","requestAnimationFrame","animate","nowMsec","deltaMsec","forEach","renderFunc","App","useRef","useEffect","current","useGlobe","react_default","a","createElement","className","style","ref","Boolean","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.445e62e1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"appHeader\":\"app_appHeader__3YfRd\",\"threeContainer\":\"app_threeContainer__2B4F2\"};","import get from 'lodash/get';\n\ninterface MouseButtonListener {\n  (x: number, y: number): void;\n}\n\ninterface Zoom {\n  (): void;\n}\n\ntype Coordinate = number;\n\ninterface Coordinates {\n  startX: Coordinate;\n  startY: Coordinate;\n  currentX: Coordinate;\n  currentY: Coordinate;\n}\n\ntype CoordinateEvent = MouseEvent | TouchEvent;\n\nclass Controls {\n  private coordinates: Coordinates | null;\n  private touchZoomDistance: number;\n  private readonly drag: MouseButtonListener;\n  private readonly zoomIn: Zoom;\n  private readonly zoomOut: Zoom;\n\n  public constructor(\n    domObject: HTMLElement,\n    drag: MouseButtonListener,\n    zoomIn: Zoom,\n    zoomOut: Zoom\n  ) {\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n    this.drag = drag;\n    this.zoomIn = zoomIn;\n    this.zoomOut = zoomOut;\n\n    domObject.addEventListener('wheel', this.mouseWheelHandler);\n\n    domObject.addEventListener('mousedown', this.downHandler);\n    domObject.addEventListener('mousemove', this.moveHandler);\n    domObject.addEventListener('mouseup', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.downHandler);\n    domObject.addEventListener('touchmove', this.moveHandler);\n    domObject.addEventListener('touchend', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.zoomStartHandler);\n    domObject.addEventListener('touchmove', this.zoomMoveHandler);\n  }\n\n  private zoomStartHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.touchZoomDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n  };\n\n  private zoomMoveHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    const newDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n\n    const delta = newDistance - this.touchZoomDistance;\n    console.log(delta);\n    if (Math.abs(delta) > 10) {\n      if (delta < 0) {\n        this.zoomOut();\n      } else {\n        this.zoomIn();\n      }\n\n      this.touchZoomDistance = newDistance;\n    }\n  };\n\n  private mouseWheelHandler = (e: WheelEvent): void => {\n    e.preventDefault();\n    let delta = Math.max(-1, Math.min(1, -e.deltaY));\n\n    if (delta < 0 && this.zoomOut) {\n      this.zoomOut();\n    } else if (this.zoomIn) {\n      this.zoomIn();\n    }\n  };\n\n  private getCoordinates = (e: CoordinateEvent): { x: number; y: number } => {\n    if (e instanceof MouseEvent) {\n      return { x: e.clientX, y: e.clientY };\n    }\n\n    return { x: e.touches[0].pageX, y: e.touches[0].pageY };\n  };\n\n  private downHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    this.coordinates = {\n      startX: x,\n      startY: y,\n      currentX: x,\n      currentY: y,\n    };\n  };\n\n  private moveHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    if (!this.isInteractionStarted(this.coordinates)) return;\n\n    if (this.drag) {\n      this.drag(x - this.coordinates.currentX, y - this.coordinates.currentY);\n    }\n\n    this.coordinates.currentX = x;\n    this.coordinates.currentY = y;\n  };\n\n  private endHandler = (e: CoordinateEvent): void => {\n    e.preventDefault();\n\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n  };\n\n  private isInteractionStarted = (coordinates: Coordinates | null): coordinates is Coordinates =>\n    !!coordinates;\n\n  private isTwoTouches = (e: CoordinateEvent): boolean => {\n    return get(e, 'touches.length') === 2;\n  };\n}\n\nexport default Controls;","import * as THREE from 'three';\nimport Controls from './Controls';\n\ntype RenderFunc = (delta: number, now: number) => void;\n\nconst EARTH_IMAGE = 'img/2_no_clouds_4k.jpg';\nconst EARTH_BUMP = 'img/elev_bump_4k.jpg';\nconst EARTH_SPEC = 'img/water_4k.png';\nconst CLOUD_IMAGE = 'img/fair_clouds_4k.png';\nconst STAR_IMAGE = 'img/galaxy_starfield.png';\n\nconst MAX_ZOOM = 0.7;\nconst MIN_ZOOM = 5;\n\nclass Globe {\n  private container: HTMLElement;\n  private controls: Controls;\n  private renderer: THREE.WebGLRenderer;\n  private scene: THREE.Scene;\n  private camera: THREE.PerspectiveCamera;\n  private center: THREE.Vector3;\n  private globe: THREE.Mesh;\n  private clouds: THREE.Mesh;\n\n  public constructor(container: HTMLElement) {\n    this.container = container;\n    this.renderer = this.initRenderer(container);\n    this.scene = this.initScene();\n    this.camera = this.initCamera();\n    this.center = this.initCenter();\n    this.camera.lookAt(this.center);\n\n    const ambientLight = this.initAmbientLight();\n    this.scene.add(ambientLight);\n\n    const directionalLight = this.initDirectionalLight();\n    this.scene.add(directionalLight);\n\n    this.globe = this.createGlobe();\n    this.scene.add(this.globe);\n\n    this.clouds = this.createClouds();\n    this.scene.add(this.clouds);\n\n    const stars = this.initStarField();\n    this.scene.add(stars);\n\n    this.controls = new Controls(\n      container,\n      this.drag.bind(this),\n      this.zoomIn.bind(this),\n      this.zoomOut.bind(this)\n    );\n  }\n\n  private initRenderer(container: HTMLElement): THREE.WebGLRenderer {\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    return renderer;\n  }\n\n  private initScene(): THREE.Scene {\n    return new THREE.Scene();\n  }\n\n  private initCamera(): THREE.PerspectiveCamera {\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      300\n    );\n\n    camera.up = new THREE.Vector3(0, 0, 1);\n    camera.position.x = 2;\n\n    return camera;\n  }\n\n  private initCenter(): THREE.Vector3 {\n    return new THREE.Vector3();\n  }\n\n  private initAmbientLight(): THREE.Light {\n    return new THREE.AmbientLight(0x333333);\n  }\n\n  private initDirectionalLight(): THREE.Light {\n    const directionalLight = new THREE.DirectionalLight(0xffffff, 1);\n    directionalLight.position.set(5, 3, 5);\n    return directionalLight;\n  }\n\n  private createGlobe(): THREE.Mesh {\n    const loader = new THREE.TextureLoader();\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(0.5, 32, 32).rotateX(THREE.Math.degToRad(90)),\n      new THREE.MeshPhongMaterial({\n        map: loader.load(EARTH_IMAGE),\n        bumpMap: loader.load(EARTH_BUMP),\n        bumpScale: 0.01,\n        specularMap: loader.load(EARTH_SPEC),\n        specular: new THREE.Color('grey'),\n      })\n    );\n  }\n\n  private createClouds(): THREE.Mesh {\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(0.5 + 0.003, 32, 32).rotateX(THREE.Math.degToRad(90)),\n      new THREE.MeshPhongMaterial({\n        map: new THREE.TextureLoader().load(CLOUD_IMAGE),\n        transparent: true,\n      })\n    );\n  }\n\n  private initStarField(): THREE.Mesh {\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(90, 64, 64).rotateX(THREE.Math.degToRad(90)),\n      new THREE.MeshBasicMaterial({\n        map: new THREE.TextureLoader().load(STAR_IMAGE),\n        side: THREE.BackSide,\n      })\n    );\n  }\n\n  private drag(deltaX: number, deltaY: number): void {\n    let radPerPixel = Math.PI / 450,\n      deltaPhi = radPerPixel * deltaX,\n      deltaTheta = radPerPixel * deltaY,\n      pos = this.camera.position.sub(this.center),\n      radius = pos.length(),\n      theta = Math.acos(pos.z / radius),\n      phi = Math.atan2(pos.y, pos.x);\n\n    // Subtract deltaTheta and deltaPhi\n    theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);\n    phi -= deltaPhi;\n\n    // Turn back into Cartesian coordinates\n    pos.x = radius * Math.sin(theta) * Math.cos(phi);\n    pos.y = radius * Math.sin(theta) * Math.sin(phi);\n    pos.z = radius * Math.cos(theta);\n\n    this.camera.position.add(this.center);\n    this.camera.lookAt(this.center);\n  }\n\n  private zoomIn(): void {\n    if (this.camera.position.length() > MAX_ZOOM) {\n      this.camera.position\n        .sub(this.center)\n        .multiplyScalar(0.9)\n        .add(this.center);\n    }\n  }\n\n  private zoomOut(): void {\n    if (this.camera.position.length() < MIN_ZOOM) {\n      this.camera.position\n        .sub(this.center)\n        .multiplyScalar(1.1)\n        .add(this.center);\n    }\n  }\n\n  public render(): void {\n    const { renderer, globe, scene, camera, clouds, container } = this;\n    const renderFuncs: RenderFunc[] = [];\n\n    renderFuncs.push(\n      (delta: number): void => {\n        globe.rotateZ((1 / 32) * delta);\n      }\n    );\n\n    renderFuncs.push(\n      (delta: number): void => {\n        clouds.rotateZ((1 / 24) * delta);\n      }\n    );\n\n    window.addEventListener('resize', function onWindowResize(): void {\n      camera.aspect = container.clientWidth / container.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(container.clientWidth, container.clientHeight);\n    });\n\n    renderFuncs.push(\n      (): void => {\n        renderer.render(scene, camera);\n      }\n    );\n\n    let lastTimeMsec: number | null = null;\n    requestAnimationFrame(function animate(nowMsec): void {\n      // measure time\n      lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n      const deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n      lastTimeMsec = nowMsec;\n      // call each update\n      renderFuncs.forEach(\n        (renderFunc: RenderFunc): void => {\n          renderFunc(deltaMsec / 1000, nowMsec / 1000);\n        }\n      );\n\n      // keep looping\n      requestAnimationFrame(animate);\n    });\n  }\n}\n\nexport default Globe;\n","import React, { useEffect, useRef, ReactElement, RefObject } from 'react';\nimport style from './app.module.css';\nimport Globe from './components/globe/Globe';\n\nfunction useGlobe(): RefObject<HTMLElement> {\n  const threeContainer = useRef<HTMLElement>(null);\n\n  useEffect(\n    (): void => {\n      if (threeContainer.current) {\n        const globe = new Globe(threeContainer.current);\n        globe.render();\n      }\n    }\n  );\n\n  return threeContainer;\n}\n\nfunction App(): ReactElement {\n  const threeContainer = useGlobe();\n\n  return (\n    <div className={style.app}>\n      <header className={style.appHeader}>CLEAN PLANET</header>\n      <main className={style.threeContainer} ref={threeContainer} />\n      <footer>© Anton Chernov 2019</footer>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}