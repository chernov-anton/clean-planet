{"version":3,"sources":["components/globe/controls/index.ts","components/globe/controls/Controls.ts","components/globe/country-select/countryColorMap.ts","components/globe/country-select/index.ts","components/globe/country-select/CountrySelect.ts","components/globe/index.ts","components/globe/Globe.ts","components/globe/shaders/vertex.glsl","components/globe/shaders/fragment.glsl","App.tsx","serviceWorker.ts","index.tsx","app.module.css"],"names":["Controls","domObject","drag","click","zoomIn","zoomOut","_this","this","Object","classCallCheck","coordinates","touchZoomDistance","zoomStartHandler","e","isTwoTouches","preventDefault","Math","hypot","touches","pageX","pageY","zoomMoveHandler","newDistance","delta","console","log","abs","mouseWheelHandler","max","min","deltaY","getCoordinates","MouseEvent","x","clientX","y","clientY","downHandler","_this$getCoordinates","startX","startY","currentX","currentY","moveHandler","_this$getCoordinates2","isInteractionStarted","endHandler","isClicked","isDrag","get","addEventListener","colorMap","PE","BF","FR","LY","BY","PK","ID","YE","MG","BO","CI","DZ","CH","CM","MK","BW","UA","KE","TW","JO","MX","AE","BZ","BR","SL","ML","CD","IT","SO","AF","BD","DO","GW","GH","AT","SE","TR","UG","MZ","JP","NZ","CU","VE","PT","CO","MR","AO","DE","SD","TH","AU","PG","IQ","HR","GL","NE","DK","LV","RO","ZM","IR","MM","ET","GT","SR","EH","CZ","TD","AL","FI","SY","KG","SB","OM","PA","AR","GB","CR","PY","GN","IE","NG","TN","PL","NA","ZA","EG","TZ","GE","SA","VN","RU","HT","BA","IN","CN","CA","SV","GY","BE","GQ","LS","BG","BI","DJ","AZ","MY","PH","UY","CG","RS","ME","EE","RW","AM","SN","TG","ES","GA","HU","MW","TJ","KH","KR","HN","IS","NI","CL","MA","LR","NL","CF","SK","LT","ZW","LK","IL","LA","KP","GR","TM","EC","BJ","SI","NO","MD","LB","NP","ER","US","KZ","AQ","SZ","UZ","MN","BT","NC","FJ","KW","TL","BS","VU","FK","GM","QA","JM","CY","PR","PS","BN","TT","CV","PF","WS","LU","KM","MU","FO","ST","AN","DM","TO","KI","FM","BH","AD","MP","PW","SC","AG","BB","TC","VC","LC","YT","VI","GD","MT","MV","KY","KN","MS","BL","NU","PM","CK","WF","AS","MH","AW","LI","VG","SH","JE","AI","MF_1_","GG","SM","BM","TV","NR","GI","PN","MC","VA","IM","GU","SG","CountrySelect","_ref","scene","renderer","mapUniforms","lookupContext","lookupTexture","camera","previousColorIndex","onCountryClick","cleanupContext","_this$getMouseCoordin","getMouseCoordinates","mouseX","mouseY","pickedColorIndex","getPickColor","countryCode","findKey","countryColorMap","countryColorIndex","highlightCountry","highlightOcean","canvas","context","offsetLeft","height","offsetTop","value","clear","render","gl","buf","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","clearRect","needsUpdate","ctx","fillStyle","fillRect","colorIndex","Globe","container","center","globe","getRenderer","getScene","getCamera","getCenter","lookAt","ambientLight","getAmbientLight","add","lookupCanvas","getLookupCanvas","getLookupContext","getLookupTexture","getMapUniforms","createGlobe","select","bind","deltaX","radPerPixel","PI","deltaPhi","deltaTheta","pos","position","sub","radius","length","theta","acos","z","phi","atan2","sin","cos","multiplyScalar","renderFuncs","push","rotateZ","window","aspect","clientWidth","clientHeight","updateProjectionMatrix","setSize","lastTimeMsec","requestAnimationFrame","animate","nowMsec","deltaMsec","forEach","renderFunc","THREE","innerWidth","innerHeight","appendChild","domElement","up","document","createElement","width","getContext","Error","magFilter","minFilter","loader","mapTexture","load","mapIndex","type","outline","lookup","outlineLevel","uniforms","planeMaterial","vertexShader","fragmentShader","rotateX","degToRad","App","threeContainer","useRef","useEffect","current","useGlobe","react_default","a","className","style","app","appHeader","ref","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.1de7dbfe.chunk.js","sourcesContent":["import Controls from './Controls';\n\nexport default Controls;\n","import get from 'lodash/get';\n\ninterface MouseButtonListener {\n  (x: number, y: number): void;\n}\n\ninterface Zoom {\n  (): void;\n}\n\ntype Coordinate = number;\n\ninterface Coordinates {\n  startX: Coordinate;\n  startY: Coordinate;\n  currentX: Coordinate;\n  currentY: Coordinate;\n}\n\ntype CoordinateEvent = MouseEvent | TouchEvent;\n\nclass Controls {\n  private coordinates: Coordinates | null;\n  private touchZoomDistance: number;\n  private readonly drag: MouseButtonListener;\n  private readonly click: MouseButtonListener;\n  private readonly zoomIn: Zoom;\n  private readonly zoomOut: Zoom;\n\n  public constructor(\n    domObject: HTMLElement,\n    drag: MouseButtonListener,\n    click: MouseButtonListener,\n    zoomIn: Zoom,\n    zoomOut: Zoom\n  ) {\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n    this.drag = drag;\n    this.zoomIn = zoomIn;\n    this.zoomOut = zoomOut;\n    this.click = click;\n\n    domObject.addEventListener('wheel', this.mouseWheelHandler);\n\n    domObject.addEventListener('mousedown', this.downHandler);\n    domObject.addEventListener('mousemove', this.moveHandler);\n    domObject.addEventListener('mouseup', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.downHandler);\n    domObject.addEventListener('touchmove', this.moveHandler);\n    domObject.addEventListener('touchend', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.zoomStartHandler);\n    domObject.addEventListener('touchmove', this.zoomMoveHandler);\n  }\n\n  private zoomStartHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.touchZoomDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n  };\n\n  private zoomMoveHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    const newDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n\n    const delta = newDistance - this.touchZoomDistance;\n    console.log(delta);\n    if (Math.abs(delta) > 10) {\n      if (delta < 0) {\n        this.zoomOut();\n      } else {\n        this.zoomIn();\n      }\n\n      this.touchZoomDistance = newDistance;\n    }\n  };\n\n  private mouseWheelHandler = (e: WheelEvent): void => {\n    e.preventDefault();\n    let delta = Math.max(-1, Math.min(1, -e.deltaY));\n\n    if (delta < 0 && this.zoomOut) {\n      this.zoomOut();\n    } else if (this.zoomIn) {\n      this.zoomIn();\n    }\n  };\n\n  private getCoordinates = (e: CoordinateEvent): { x: number; y: number } => {\n    if (e instanceof MouseEvent) {\n      return { x: e.clientX, y: e.clientY };\n    }\n\n    return { x: e.touches[0].pageX, y: e.touches[0].pageY };\n  };\n\n  private downHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    this.coordinates = {\n      startX: x,\n      startY: y,\n      currentX: x,\n      currentY: y,\n    };\n  };\n\n  private moveHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    if (!this.isInteractionStarted(this.coordinates)) return;\n\n    if (this.drag) {\n      this.drag(x - this.coordinates.currentX, y - this.coordinates.currentY);\n    }\n\n    this.coordinates.currentX = x;\n    this.coordinates.currentY = y;\n  };\n\n  private endHandler = (e: CoordinateEvent): void => {\n    e.preventDefault();\n\n    if (this.isClicked(this.coordinates)) {\n      if (this.click) this.click(this.coordinates.currentX, this.coordinates.currentY);\n    }\n\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n  };\n\n  private isClicked = (coordinates: Coordinates | null): coordinates is Coordinates =>\n    this.isInteractionStarted(coordinates) &&\n    !this.isDrag(coordinates) &&\n    this.click &&\n    !this.touchZoomDistance;\n\n  private isInteractionStarted = (coordinates: Coordinates | null): coordinates is Coordinates =>\n    !!coordinates;\n\n  private isDrag = (coordinates: Coordinates): boolean =>\n    Math.abs(coordinates.startX - coordinates.currentX) > 3 ||\n    Math.abs(coordinates.startY - coordinates.currentY) > 3;\n\n  private isTwoTouches = (e: CoordinateEvent): boolean => {\n    return get(e, 'touches.length') === 2;\n  };\n}\n\nexport default Controls;\n","interface ColorMap {\n  [key: string]: number;\n}\n\nconst colorMap: ColorMap = {\n  PE: 1,\n  BF: 2,\n  FR: 3,\n  LY: 4,\n  BY: 5,\n  PK: 6,\n  ID: 7,\n  YE: 8,\n  MG: 9,\n  BO: 10,\n  CI: 11,\n  DZ: 12,\n  CH: 13,\n  CM: 14,\n  MK: 15,\n  BW: 16,\n  UA: 17,\n  KE: 18,\n  TW: 19,\n  JO: 20,\n  MX: 21,\n  AE: 22,\n  BZ: 23,\n  BR: 24,\n  SL: 25,\n  ML: 26,\n  CD: 27,\n  IT: 28,\n  SO: 29,\n  AF: 30,\n  BD: 31,\n  DO: 32,\n  GW: 33,\n  GH: 34,\n  AT: 35,\n  SE: 36,\n  TR: 37,\n  UG: 38,\n  MZ: 39,\n  JP: 40,\n  NZ: 41,\n  CU: 42,\n  VE: 43,\n  PT: 44,\n  CO: 45,\n  MR: 46,\n  AO: 47,\n  DE: 48,\n  SD: 49,\n  TH: 50,\n  AU: 51,\n  PG: 52,\n  IQ: 53,\n  HR: 54,\n  GL: 55,\n  NE: 56,\n  DK: 57,\n  LV: 58,\n  RO: 59,\n  ZM: 60,\n  IR: 61,\n  MM: 62,\n  ET: 63,\n  GT: 64,\n  SR: 65,\n  EH: 66,\n  CZ: 67,\n  TD: 68,\n  AL: 69,\n  FI: 70,\n  SY: 71,\n  KG: 72,\n  SB: 73,\n  OM: 74,\n  PA: 75,\n  AR: 76,\n  GB: 77,\n  CR: 78,\n  PY: 79,\n  GN: 80,\n  IE: 81,\n  NG: 82,\n  TN: 83,\n  PL: 84,\n  NA: 85,\n  ZA: 86,\n  EG: 87,\n  TZ: 88,\n  GE: 89,\n  SA: 90,\n  VN: 91,\n  RU: 92,\n  HT: 93,\n  BA: 94,\n  IN: 95,\n  CN: 96,\n  CA: 97,\n  SV: 98,\n  GY: 99,\n  BE: 100,\n  GQ: 101,\n  LS: 102,\n  BG: 103,\n  BI: 104,\n  DJ: 105,\n  AZ: 106,\n  MY: 107,\n  PH: 108,\n  UY: 109,\n  CG: 110,\n  RS: 111,\n  ME: 112,\n  EE: 113,\n  RW: 114,\n  AM: 115,\n  SN: 116,\n  TG: 117,\n  ES: 118,\n  GA: 119,\n  HU: 120,\n  MW: 121,\n  TJ: 122,\n  KH: 123,\n  KR: 124,\n  HN: 125,\n  IS: 126,\n  NI: 127,\n  CL: 128,\n  MA: 129,\n  LR: 130,\n  NL: 131,\n  CF: 132,\n  SK: 133,\n  LT: 134,\n  ZW: 135,\n  LK: 136,\n  IL: 137,\n  LA: 138,\n  KP: 139,\n  GR: 140,\n  TM: 141,\n  EC: 142,\n  BJ: 143,\n  SI: 144,\n  NO: 145,\n  MD: 146,\n  LB: 147,\n  NP: 148,\n  ER: 149,\n  US: 150,\n  KZ: 151,\n  AQ: 152,\n  SZ: 153,\n  UZ: 154,\n  MN: 155,\n  BT: 156,\n  NC: 157,\n  FJ: 158,\n  KW: 159,\n  TL: 160,\n  BS: 161,\n  VU: 162,\n  FK: 163,\n  GM: 164,\n  QA: 165,\n  JM: 166,\n  CY: 167,\n  PR: 168,\n  PS: 169,\n  BN: 170,\n  TT: 171,\n  CV: 172,\n  PF: 173,\n  WS: 174,\n  LU: 175,\n  KM: 176,\n  MU: 177,\n  FO: 178,\n  ST: 179,\n  AN: 180,\n  DM: 181,\n  TO: 182,\n  KI: 183,\n  FM: 184,\n  BH: 185,\n  AD: 186,\n  MP: 187,\n  PW: 188,\n  SC: 189,\n  AG: 190,\n  BB: 191,\n  TC: 192,\n  VC: 193,\n  LC: 194,\n  YT: 195,\n  VI: 196,\n  GD: 197,\n  MT: 198,\n  MV: 199,\n  KY: 200,\n  KN: 201,\n  MS: 202,\n  BL: 203,\n  NU: 204,\n  PM: 205,\n  CK: 206,\n  WF: 207,\n  AS: 208,\n  MH: 209,\n  AW: 210,\n  LI: 211,\n  VG: 212,\n  SH: 213,\n  JE: 214,\n  AI: 215,\n  MF_1_: 216,\n  GG: 217,\n  SM: 218,\n  BM: 219,\n  TV: 220,\n  NR: 221,\n  GI: 222,\n  PN: 223,\n  MC: 224,\n  VA: 225,\n  IM: 226,\n  GU: 227,\n  SG: 228,\n};\n\nexport default colorMap;\n","import CountrySelect from './CountrySelect';\n\nexport default CountrySelect;\n","import countryColorMap from './countryColorMap';\nimport * as THREE from 'three';\nimport { Uniforms } from '../types';\nimport findKey from 'lodash/findKey';\n\ninterface CountrySelectParams {\n  scene: THREE.Scene;\n  renderer: THREE.WebGLRenderer;\n  mapUniforms: Uniforms;\n  lookupContext: CanvasRenderingContext2D;\n  lookupTexture: THREE.Texture;\n  camera: THREE.PerspectiveCamera;\n}\n\nclass CountrySelect {\n  private renderer: THREE.WebGLRenderer;\n  private readonly lookupContext: CanvasRenderingContext2D;\n  private readonly camera: THREE.PerspectiveCamera;\n  private lookupTexture: THREE.Texture;\n  private readonly scene: THREE.Scene;\n  private mapUniforms: Uniforms;\n  private previousColorIndex: number;\n\n  public constructor({\n    scene,\n    renderer,\n    mapUniforms,\n    lookupContext,\n    lookupTexture,\n    camera,\n  }: CountrySelectParams) {\n    this.scene = scene;\n    this.renderer = renderer;\n    this.mapUniforms = mapUniforms;\n    this.lookupContext = lookupContext;\n    this.lookupTexture = lookupTexture;\n    this.camera = camera;\n    this.previousColorIndex = 0;\n\n    this.highlightOcean();\n  }\n\n  public onCountryClick = (x: number, y: number): void => {\n    this.cleanupContext();\n\n    const { mouseX, mouseY } = this.getMouseCoordinates(x, y);\n    const pickedColorIndex = this.getPickColor(mouseX, mouseY) || this.previousColorIndex;\n\n    if (pickedColorIndex) {\n      // save color index for the click on ocean\n      this.previousColorIndex = pickedColorIndex;\n\n      const countryCode = findKey(\n        countryColorMap,\n        (countryColorIndex): boolean => countryColorIndex === pickedColorIndex\n      );\n\n      if (countryCode) {\n        this.highlightCountry(countryCode);\n      }\n    }\n\n    this.highlightOcean();\n  };\n\n  private getMouseCoordinates(x: number, y: number): { mouseX: number; mouseY: number } {\n    let canvas = this.renderer.context.canvas;\n\n    let mouseX = x - canvas.offsetLeft;\n    let mouseY = -y + canvas.height + canvas.offsetTop;\n\n    return { mouseX, mouseY };\n  }\n\n  private getPickColor(mouseX: number, mouseY: number): number {\n    this.mapUniforms['outlineLevel'].value = 0;\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    let gl = this.renderer.context;\n\n    let buf = new Uint8Array(4);\n    gl.readPixels(mouseX, mouseY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, buf);\n\n    this.mapUniforms['outlineLevel'].value = 1;\n\n    return buf[0];\n  }\n\n  private cleanupContext(): void {\n    this.lookupContext.clearRect(0, 0, 256, 1);\n    this.lookupTexture.needsUpdate = true;\n  }\n\n  private highlightOcean(): void {\n    let ctx = this.lookupContext;\n    ctx.fillStyle = 'rgb(10,10,10)';\n    ctx.fillRect(0, 0, 1, 1);\n    this.lookupTexture.needsUpdate = true;\n  }\n\n  private highlightCountry(countryCode?: string): void {\n    this.cleanupContext();\n\n    if (countryCode) {\n      let colorIndex = countryColorMap[countryCode];\n\n      let ctx = this.lookupContext;\n\n      ctx.fillStyle = '#eeeeee';\n      ctx.fillRect(colorIndex, 0, 1, 1);\n    }\n\n    this.lookupTexture.needsUpdate = true;\n  }\n}\n\nexport default CountrySelect;\n","import Globe from './Globe';\n\nexport default Globe;\n","import * as THREE from 'three';\nimport Controls from './controls';\nimport CountrySelect from './country-select';\n\n/* eslint import/no-webpack-loader-syntax: off */\nimport fragmentShader from '!raw-loader!glslify-loader!./shaders/fragment.glsl';\n/* eslint import/no-webpack-loader-syntax: off */\nimport vertexShader from '!raw-loader!glslify-loader!./shaders/vertex.glsl';\nimport { Uniforms } from './types';\n\ntype RenderFunc = (delta: number, now: number) => void;\n\nconst INDEXED_MAP_IMAGE = 'img/map_indexed.png';\nconst OUTLINED_MAP_IMAGE = 'img/map_outline.png';\n\nconst MAX_ZOOM = 1;\nconst MIN_ZOOM = 4;\n\nclass Globe {\n  private container: HTMLElement;\n  private readonly renderer: THREE.WebGLRenderer;\n  private readonly scene: THREE.Scene;\n  private readonly lookupContext: CanvasRenderingContext2D;\n  private readonly lookupTexture: THREE.Texture;\n  private readonly camera: THREE.PerspectiveCamera;\n  private readonly center: THREE.Vector3;\n  private readonly globe: THREE.Mesh;\n  private readonly mapUniforms: Uniforms;\n\n  public constructor(container: HTMLElement) {\n    this.container = container;\n    this.renderer = Globe.getRenderer(container);\n    this.scene = Globe.getScene();\n    this.camera = Globe.getCamera();\n    this.center = Globe.getCenter();\n    this.camera.lookAt(this.center);\n\n    const ambientLight = Globe.getAmbientLight();\n    this.scene.add(ambientLight);\n\n    const lookupCanvas = Globe.getLookupCanvas();\n    this.lookupContext = Globe.getLookupContext(lookupCanvas);\n    this.lookupTexture = Globe.getLookupTexture(lookupCanvas);\n    this.mapUniforms = Globe.getMapUniforms(this.lookupTexture);\n\n    this.globe = Globe.createGlobe(this.mapUniforms);\n    this.scene.add(this.globe);\n\n    const select = new CountrySelect({\n      scene: this.scene,\n      lookupContext: this.lookupContext,\n      lookupTexture: this.lookupTexture,\n      mapUniforms: this.mapUniforms,\n      renderer: this.renderer,\n      camera: this.camera,\n    });\n\n    new Controls(\n      container,\n      this.drag.bind(this),\n      select.onCountryClick,\n      this.zoomIn.bind(this),\n      this.zoomOut.bind(this)\n    );\n  }\n\n  private static getRenderer(container: HTMLElement): THREE.WebGLRenderer {\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    return renderer;\n  }\n\n  private static getScene(): THREE.Scene {\n    return new THREE.Scene();\n  }\n\n  private static getCamera(): THREE.PerspectiveCamera {\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      300\n    );\n\n    camera.up = new THREE.Vector3(0, 0, 1);\n    camera.position.x = 2;\n\n    return camera;\n  }\n\n  private static getCenter(): THREE.Vector3 {\n    return new THREE.Vector3();\n  }\n\n  private static getAmbientLight(): THREE.Light {\n    return new THREE.AmbientLight(0xffffff);\n  }\n\n  private static getLookupCanvas(): HTMLCanvasElement {\n    const lookupCanvas = document.createElement('canvas');\n    lookupCanvas.width = 256;\n    lookupCanvas.height = 1;\n    return lookupCanvas;\n  }\n\n  private static getLookupContext(lookupCanvas: HTMLCanvasElement): CanvasRenderingContext2D {\n    const lookupContext = lookupCanvas.getContext('2d');\n    if (!lookupContext) {\n      throw new Error('Lookup context is empty!');\n    }\n    return lookupContext;\n  }\n\n  private static getLookupTexture(lookupCanvas: HTMLCanvasElement): THREE.Texture {\n    const lookupTexture = new THREE.Texture(lookupCanvas);\n    lookupTexture.magFilter = THREE.NearestFilter;\n    lookupTexture.minFilter = THREE.NearestFilter;\n    return lookupTexture;\n  }\n\n  private static getMapUniforms(lookupTexture: THREE.Texture): Uniforms {\n    const loader = new THREE.TextureLoader();\n\n    const mapTexture = loader.load(INDEXED_MAP_IMAGE);\n    mapTexture.magFilter = THREE.NearestFilter;\n    mapTexture.minFilter = THREE.NearestFilter;\n\n    const outlineTexture = loader.load(OUTLINED_MAP_IMAGE);\n\n    return {\n      mapIndex: { type: 't', value: mapTexture },\n      outline: { type: 't', value: outlineTexture },\n      lookup: { type: 't', value: lookupTexture },\n      outlineLevel: { type: 'f', value: 1 },\n    };\n  }\n\n  private static createGlobe(uniforms: Uniforms): THREE.Mesh {\n    const planeMaterial = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n    });\n\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(0.5, 32, 32).rotateX(THREE.Math.degToRad(90)),\n      planeMaterial\n    );\n  }\n\n  private drag(deltaX: number, deltaY: number): void {\n    let radPerPixel = Math.PI / 450,\n      deltaPhi = radPerPixel * deltaX,\n      deltaTheta = radPerPixel * deltaY,\n      pos = this.camera.position.sub(this.center),\n      radius = pos.length(),\n      theta = Math.acos(pos.z / radius),\n      phi = Math.atan2(pos.y, pos.x);\n\n    // Subtract deltaTheta and deltaPhi\n    theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);\n    phi -= deltaPhi;\n\n    // Turn back into Cartesian coordinates\n    pos.x = radius * Math.sin(theta) * Math.cos(phi);\n    pos.y = radius * Math.sin(theta) * Math.sin(phi);\n    pos.z = radius * Math.cos(theta);\n\n    this.camera.position.add(this.center);\n    this.camera.lookAt(this.center);\n  }\n\n  private zoomIn(): void {\n    if (this.camera.position.length() > MAX_ZOOM) {\n      this.camera.position\n        .sub(this.center)\n        .multiplyScalar(0.95)\n        .add(this.center);\n    }\n  }\n\n  private zoomOut(): void {\n    if (this.camera.position.length() < MIN_ZOOM) {\n      this.camera.position\n        .sub(this.center)\n        .multiplyScalar(1.05)\n        .add(this.center);\n    }\n  }\n\n  public render(): void {\n    const { renderer, globe, scene, camera, container } = this;\n    const renderFuncs: RenderFunc[] = [];\n\n    renderFuncs.push(\n      (delta: number): void => {\n        globe.rotateZ((1 / 32) * delta);\n      }\n    );\n\n    window.addEventListener('resize', function onWindowResize(): void {\n      camera.aspect = container.clientWidth / container.clientHeight;\n      camera.updateProjectionMatrix();\n      renderer.setSize(container.clientWidth, container.clientHeight);\n    });\n\n    renderFuncs.push(\n      (): void => {\n        renderer.render(scene, camera);\n      }\n    );\n\n    let lastTimeMsec: number | null = null;\n    requestAnimationFrame(function animate(nowMsec): void {\n      // measure time\n      lastTimeMsec = lastTimeMsec || nowMsec - 1000 / 60;\n      const deltaMsec = Math.min(200, nowMsec - lastTimeMsec);\n      lastTimeMsec = nowMsec;\n      // call each update\n      renderFuncs.forEach(\n        (renderFunc: RenderFunc): void => {\n          renderFunc(deltaMsec / 1000, nowMsec / 1000);\n        }\n      );\n\n      // keep looping\n      requestAnimationFrame(animate);\n    });\n  }\n}\n\nexport default Globe;\n","export default \"#define GLSLIFY 1\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nvoid main()\\n{\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    vNormal = normalize(normalMatrix * normal);\\n    vUv = uv;\\n}\\n\"","export default \"#define GLSLIFY 1\\nuniform sampler2D mapIndex;\\nuniform sampler2D lookup;\\nuniform sampler2D outline;\\nuniform float outlineLevel;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nvoid main() {\\n    vec4 mapColor = texture2D(mapIndex, vUv);\\n    float indexedColor = mapColor.x;\\n    vec2 lookupUV = vec2(indexedColor, 0.);\\n    vec4 lookupColor = texture2D(lookup, lookupUV);\\n    float mask = lookupColor.x + (1.-outlineLevel) * indexedColor;\\n    mask = clamp(mask, 0., 1.);\\n    float outlineColor = texture2D(outline, vUv).x * outlineLevel;\\n    float diffuse = mask + outlineColor;\\n    gl_FragColor = vec4(vec3(diffuse), 1.);\\n}\"","import React, { useEffect, useRef, ReactElement, RefObject } from 'react';\nimport style from './app.module.css';\nimport Globe from './components/globe';\n\nfunction useGlobe(): RefObject<HTMLElement> {\n  const threeContainer = useRef<HTMLElement>(null);\n\n  useEffect(\n    (): void => {\n      if (threeContainer.current) {\n        const globe = new Globe(threeContainer.current);\n        globe.render();\n      }\n    }\n  );\n\n  return threeContainer;\n}\n\nfunction App(): ReactElement {\n  const threeContainer = useGlobe();\n\n  return (\n    <div className={style.app}>\n      <header className={style.appHeader}>CLEAN PLANET</header>\n      <main className={style.threeContainer} ref={threeContainer} />\n      <footer>© Anton Chernov 2019</footer>\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\",\"appHeader\":\"app_appHeader__3YfRd\",\"threeContainer\":\"app_threeContainer__2B4F2\"};"],"sourceRoot":""}