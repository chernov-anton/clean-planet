{"version":3,"sources":["components/marker/MarkerView.tsx","components/marker/markerUtils.ts","components/marker/index.ts","components/marker/MarkerContainer.tsx","components/globe/GlobeModel.ts","components/globe/GlobeModelFactory.ts","components/globe/shaders/vertex.glsl","components/globe/shaders/fragment.glsl","components/controls/index.ts","components/controls/Controls.ts","components/globe/country-select/countryColorMap.ts","components/globe/country-select/index.ts","components/globe/country-select/CountrySelect.ts","components/globe/GlobeController.ts","components/globe/index.ts","components/globe/Globe.tsx","App.tsx","serviceWorker.ts","index.tsx","app.module.css","components/marker/marker.module.css"],"names":["MarkerView","_ref","isVisible","position","fontSize","text","viewStyle","display","left","x","top","y","react_default","a","createElement","style","className","marker","getDistance","vector1","vector2","dx","dy","dz","z","Math","sqrt","getMarkerData","memoize","countryCode","markersData","Error","MarkerContainer","state","setVisibility","_this","setState","this","size","camera","globeMesh","container","matrix","matrixWorld","country","props","absolutePosition","Vector3","center","applyMatrix4","setSize","length","screenPos","vector","round","clientWidth","clientHeight","getDisplayPosition","vec3","clone","project","getCameraProjection","setPosition","_this$state","countryName","marker_MarkerView","PureComponent","GlobeModel","renderer","scene","lookupContext","lookupTexture","mapUniforms","Object","classCallCheck","GlobeModelFactory","getRenderer","getScene","getCamera","getCenter","lookAt","ambientLight","getAmbientLight","add","lookupCanvas","getLookupCanvas","getLookupContext","getLookupTexture","getMapUniforms","createGlobeMesh","THREE","window","innerWidth","innerHeight","appendChild","domElement","up","document","width","height","getContext","magFilter","minFilter","loader","mapTexture","load","mapIndex","type","value","outline","lookup","outlineLevel","uniforms","planetMaterial","vertexShader","fragmentShader","rotateX","degToRad","Controls","domObject","drag","click","zoomIn","zoomOut","coordinates","touchZoomDistance","zoomStartHandler","e","isTwoTouches","preventDefault","hypot","touches","pageX","pageY","zoomMoveHandler","newDistance","delta","console","log","abs","mouseWheelHandler","max","min","deltaY","getCoordinates","MouseEvent","clientX","clientY","downHandler","_this$getCoordinates","startX","startY","currentX","currentY","moveHandler","_this$getCoordinates2","isInteractionStarted","endHandler","isClicked","isDrag","get","addEventListener","colorMap","PE","BF","FR","LY","BY","PK","ID","YE","MG","BO","CI","DZ","CH","CM","MK","BW","UA","KE","TW","JO","MX","AE","BZ","BR","SL","ML","CD","IT","SO","AF","BD","DO","GW","GH","AT","SE","TR","UG","MZ","JP","NZ","CU","VE","PT","CO","MR","AO","DE","SD","TH","AU","PG","IQ","HR","GL","NE","DK","LV","RO","ZM","IR","MM","ET","GT","SR","EH","CZ","TD","AL","FI","SY","KG","SB","OM","PA","AR","GB","CR","PY","GN","IE","NG","TN","PL","NA","ZA","EG","TZ","GE","SA","VN","RU","HT","BA","IN","CN","CA","SV","GY","BE","GQ","LS","BG","BI","DJ","AZ","MY","PH","UY","CG","RS","ME","EE","RW","AM","SN","TG","ES","GA","HU","MW","TJ","KH","KR","HN","IS","NI","CL","MA","LR","NL","CF","SK","LT","ZW","LK","IL","LA","KP","GR","TM","EC","BJ","SI","NO","MD","LB","NP","ER","US","KZ","AQ","SZ","UZ","MN","BT","NC","FJ","KW","TL","BS","VU","FK","GM","QA","JM","CY","PR","PS","BN","TT","CV","PF","WS","LU","KM","MU","FO","ST","AN","DM","TO","KI","FM","BH","AD","MP","PW","SC","AG","BB","TC","VC","LC","YT","VI","GD","MT","MV","KY","KN","MS","BL","NU","PM","CK","WF","AS","MH","AW","LI","VG","SH","JE","AI","MF_1_","GG","SM","BM","TV","NR","GI","PN","MC","VA","IM","GU","SG","CountrySelect","onCountryChange","previousColorIndex","onCountryClick","cleanupContext","_this$getMouseCoordin","getMouseCoordinates","mouseX","mouseY","pickedColorIndex","getPickColor","findKey","countryColorMap","countryColorIndex","highlightCountry","highlightOcean","canvas","context","offsetLeft","offsetTop","clear","render","gl","buf","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","clearRect","needsUpdate","ctx","fillStyle","fillRect","colorIndex","MAX_ZOOM","MIN_ZOOM","GlobeController","globeModel","countrySelect","lastTimeMs","renderFuncs","resize","_this$globeModel","aspect","updateProjectionMatrix","deltaX","radPerPixel","PI","deltaPhi","deltaTheta","pos","sub","radius","theta","acos","phi","atan2","sin","cos","multiplyScalar","rotate","rotateZ","_this$globeModel2","animate","nowMs","deltaMs","forEach","renderFunc","requestAnimationFrame","push","func","Globe","possibleConstructorReturn","getPrototypeOf","call","globeController","mainRef","markerRef","setCountry","updateMarker","current","update","React","createRef","init","addRenderFunc","show","Fragment","ref","App","app","globe","Boolean","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.ce7277eb.chunk.js","sourcesContent":["import React, { ReactElement } from 'react';\nimport style from './marker.module.css';\n\nexport interface Props {\n  isVisible: boolean;\n  position: {\n    x: number;\n    y: number;\n  };\n  fontSize: number;\n  text: string;\n}\n\nconst MarkerView = ({ isVisible, position, fontSize, text }: Props): ReactElement => {\n  const viewStyle = {\n    display: isVisible ? 'inline' : 'none',\n    left: position.x,\n    top: position.y,\n    fontSize: fontSize,\n  };\n\n  return (\n    <div style={viewStyle} className={style.marker}>\n      {text}\n    </div>\n  );\n};\n\nexport default MarkerView;\n","import * as THREE from 'three';\nimport markersData from './markersData.json';\nimport memoize from 'lodash/memoize';\n\nexport function getDisplayPosition(\n  vector: THREE.Vector3,\n  container: HTMLElement\n): { x: number; y: number } {\n  return {\n    x: Math.round(vector.x * (container.clientWidth / 2) + container.clientWidth / 2),\n    y: Math.round((0 - vector.y) * (container.clientHeight / 2) + container.clientHeight / 2),\n  };\n}\n\nexport function getCameraProjection(vec3: THREE.Vector3, camera: THREE.Camera): THREE.Vector3 {\n  return vec3.clone().project(camera);\n}\n\nexport function getDistance(vector1: THREE.Vector3, vector2: THREE.Vector3): number {\n  let dx = vector1.x - vector2.x;\n  let dy = vector1.y - vector2.y;\n  let dz = vector1.z - vector2.z;\n  return Math.sqrt(dx * dx + dy * dy + dz * dz);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function isKeyof<T extends object>(obj: T, possibleKey: keyof any): possibleKey is keyof T {\n  return possibleKey in obj;\n}\n\ninterface MarkerModel {\n  lat: string;\n  lon: string;\n  countryName: string;\n  center: {\n    x: number;\n    y: number;\n    z: number;\n  };\n}\n\nfunction getRawMarkerData(countryCode: string): MarkerModel {\n  if (!isKeyof(markersData, countryCode)) {\n    throw new Error('Country code is invalid');\n  }\n  return markersData[countryCode];\n}\n\nexport const getMarkerData = memoize(getRawMarkerData);\n","import MarkerContainer from './MarkerContainer';\n\nexport default MarkerContainer;\n","import React, { PureComponent, ReactNode } from 'react';\nimport * as THREE from 'three';\nimport { Vector3 } from 'three';\nimport MarkerView from './MarkerView';\nimport { getCameraProjection, getDisplayPosition, getDistance, getMarkerData } from './markerUtils';\n\ninterface Props {\n  countryCode: string;\n}\n\ntype State = React.ComponentProps<typeof MarkerView>;\n\nclass MarkerContainer extends PureComponent<Props, State> {\n  public state = { isVisible: false, position: { x: 0, y: 0 }, fontSize: 16, text: '' };\n\n  private setPosition(x: number, y: number): void {\n    this.setState({ position: { x, y } });\n  }\n\n  private setVisibility = (isVisible: boolean): void => {\n    this.setState({ isVisible });\n  };\n\n  private setSize(size: number): void {\n    this.setState({ fontSize: size });\n  }\n\n  public update(camera: THREE.Camera, globeMesh: THREE.Object3D, container: HTMLElement): void {\n    const matrix = globeMesh.matrixWorld;\n\n    const country = getMarkerData(this.props.countryCode);\n    const centerVector = new Vector3(country.center.x, country.center.y, country.center.z);\n    const absolutePosition = centerVector.applyMatrix4(matrix);\n\n    let size = (5 - getDistance(camera.position, new Vector3())) * 7;\n    this.setSize(size);\n\n    const isVisible = getDistance(camera.position, absolutePosition) < camera.position.length();\n    this.setVisibility(isVisible);\n\n    const cameraProjectionPosition = getCameraProjection(absolutePosition, camera);\n    let screenPos = getDisplayPosition(cameraProjectionPosition, container);\n    this.setPosition(screenPos.x, screenPos.y);\n  }\n\n  public render(): ReactNode {\n    const { isVisible, position, fontSize } = this.state;\n    const { countryCode } = this.props;\n    const { countryName } = getMarkerData(countryCode);\n\n    return (\n      <MarkerView\n        isVisible={isVisible}\n        position={position}\n        fontSize={fontSize}\n        text={countryName}\n      />\n    );\n  }\n}\n\nexport default MarkerContainer;\n","import * as THREE from 'three';\n\nimport { Uniforms } from './types';\n\ninterface GlobeOpts {\n  container: HTMLElement;\n  renderer: THREE.WebGLRenderer;\n  scene: THREE.Scene;\n  lookupContext: CanvasRenderingContext2D;\n  lookupTexture: THREE.Texture;\n  camera: THREE.PerspectiveCamera;\n  center: THREE.Vector3;\n  globeMesh: THREE.Mesh;\n  mapUniforms: Uniforms;\n}\n\nclass GlobeModel {\n  public container: HTMLElement;\n  public readonly renderer: THREE.WebGLRenderer;\n  public readonly scene: THREE.Scene;\n  public readonly lookupContext: CanvasRenderingContext2D;\n  public readonly lookupTexture: THREE.Texture;\n  public readonly camera: THREE.PerspectiveCamera;\n  public readonly center: THREE.Vector3;\n  public readonly globeMesh: THREE.Mesh;\n  public readonly mapUniforms: Uniforms;\n\n  public constructor({\n    container,\n    renderer,\n    scene,\n    camera,\n    center,\n    lookupContext,\n    lookupTexture,\n    mapUniforms,\n    globeMesh,\n  }: GlobeOpts) {\n    this.container = container;\n    this.renderer = renderer;\n    this.scene = scene;\n    this.camera = camera;\n    this.center = center;\n    this.lookupContext = lookupContext;\n    this.lookupTexture = lookupTexture;\n    this.mapUniforms = mapUniforms;\n    this.globeMesh = globeMesh;\n  }\n}\n\nexport default GlobeModel;\n","import * as THREE from 'three';\n\n/* eslint import/no-webpack-loader-syntax: off */\nimport fragmentShader from '!raw-loader!glslify-loader!./shaders/fragment.glsl';\n/* eslint import/no-webpack-loader-syntax: off */\nimport vertexShader from '!raw-loader!glslify-loader!./shaders/vertex.glsl';\nimport { Uniforms } from './types';\nimport GlobeModel from './GlobeModel';\n\nconst INDEXED_MAP_IMAGE = 'img/map_indexed.png';\nconst OUTLINED_MAP_IMAGE = 'img/map_outline.png';\n\nclass GlobeModelFactory {\n  public static init(container: HTMLElement): GlobeModel {\n    const renderer = GlobeModelFactory.getRenderer(container);\n    const scene = GlobeModelFactory.getScene();\n    const camera = GlobeModelFactory.getCamera();\n    const center = GlobeModelFactory.getCenter();\n    camera.lookAt(center);\n\n    const ambientLight = GlobeModelFactory.getAmbientLight();\n    scene.add(ambientLight);\n\n    const lookupCanvas = GlobeModelFactory.getLookupCanvas();\n    const lookupContext = GlobeModelFactory.getLookupContext(lookupCanvas);\n    const lookupTexture = GlobeModelFactory.getLookupTexture(lookupCanvas);\n    const mapUniforms = GlobeModelFactory.getMapUniforms(lookupTexture);\n\n    const globeMesh = GlobeModelFactory.createGlobeMesh(mapUniforms);\n    scene.add(globeMesh);\n\n    return new GlobeModel({\n      container,\n      renderer,\n      scene,\n      camera,\n      center,\n      lookupContext,\n      lookupTexture,\n      mapUniforms,\n      globeMesh,\n    });\n  }\n\n  private static getRenderer(container: HTMLElement): THREE.WebGLRenderer {\n    const renderer = new THREE.WebGLRenderer();\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    container.appendChild(renderer.domElement);\n\n    return renderer;\n  }\n\n  private static getScene(): THREE.Scene {\n    return new THREE.Scene();\n  }\n\n  private static getCamera(): THREE.PerspectiveCamera {\n    const camera = new THREE.PerspectiveCamera(\n      45,\n      window.innerWidth / window.innerHeight,\n      0.01,\n      300\n    );\n\n    camera.up = new THREE.Vector3(0, 0, 1);\n    camera.position.x = 2;\n\n    return camera;\n  }\n\n  private static getCenter(): THREE.Vector3 {\n    return new THREE.Vector3();\n  }\n\n  private static getAmbientLight(): THREE.Light {\n    return new THREE.AmbientLight(0xffffff);\n  }\n\n  private static getLookupCanvas(): HTMLCanvasElement {\n    const lookupCanvas = document.createElement('canvas');\n    lookupCanvas.width = 256;\n    lookupCanvas.height = 1;\n    return lookupCanvas;\n  }\n\n  private static getLookupContext(lookupCanvas: HTMLCanvasElement): CanvasRenderingContext2D {\n    const lookupContext = lookupCanvas.getContext('2d');\n    if (!lookupContext) {\n      throw new Error('Lookup context is empty!');\n    }\n    return lookupContext;\n  }\n\n  private static getLookupTexture(lookupCanvas: HTMLCanvasElement): THREE.Texture {\n    const lookupTexture = new THREE.Texture(lookupCanvas);\n    lookupTexture.magFilter = THREE.NearestFilter;\n    lookupTexture.minFilter = THREE.NearestFilter;\n    return lookupTexture;\n  }\n\n  private static getMapUniforms(lookupTexture: THREE.Texture): Uniforms {\n    const loader = new THREE.TextureLoader();\n\n    const mapTexture = loader.load(INDEXED_MAP_IMAGE);\n    mapTexture.magFilter = THREE.NearestFilter;\n    mapTexture.minFilter = THREE.NearestFilter;\n\n    const outlineTexture = loader.load(OUTLINED_MAP_IMAGE);\n\n    return {\n      mapIndex: { type: 't', value: mapTexture },\n      outline: { type: 't', value: outlineTexture },\n      lookup: { type: 't', value: lookupTexture },\n      outlineLevel: { type: 'f', value: 1 },\n    };\n  }\n\n  private static createGlobeMesh(uniforms: Uniforms): THREE.Mesh {\n    const planetMaterial = new THREE.ShaderMaterial({\n      uniforms,\n      vertexShader,\n      fragmentShader,\n    });\n\n    return new THREE.Mesh(\n      new THREE.SphereGeometry(0.5, 32, 32).rotateX(THREE.Math.degToRad(90)),\n      planetMaterial\n    );\n  }\n}\n\nexport default GlobeModelFactory;\n","export default \"#define GLSLIFY 1\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nvoid main()\\n{\\n    gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\\n    vNormal = normalize(normalMatrix * normal);\\n    vUv = uv;\\n}\\n\"","export default \"#define GLSLIFY 1\\nuniform sampler2D mapIndex;\\nuniform sampler2D lookup;\\nuniform sampler2D outline;\\nuniform float outlineLevel;\\nvarying vec3 vNormal;\\nvarying vec2 vUv;\\nvoid main() {\\n    vec4 mapColor = texture2D(mapIndex, vUv);\\n    float indexedColor = mapColor.x;\\n    vec2 lookupUV = vec2(indexedColor, 0.);\\n    vec4 lookupColor = texture2D(lookup, lookupUV);\\n    float mask = lookupColor.x + (1.-outlineLevel) * indexedColor;\\n    mask = clamp(mask, 0., 1.);\\n    float outlineColor = texture2D(outline, vUv).x * outlineLevel;\\n    float diffuse = mask + outlineColor;\\n    gl_FragColor = vec4(vec3(diffuse), 1.);\\n}\"","import Controls from './Controls';\n\nexport default Controls;\n","import get from 'lodash/get';\n\ninterface MouseButtonListener {\n  (x: number, y: number): void;\n}\n\ninterface Zoom {\n  (): void;\n}\n\ntype Coordinate = number;\n\ninterface Coordinates {\n  startX: Coordinate;\n  startY: Coordinate;\n  currentX: Coordinate;\n  currentY: Coordinate;\n}\n\ntype CoordinateEvent = MouseEvent | TouchEvent;\n\ninterface ControlsOpts {\n  domObject: HTMLElement;\n  drag: MouseButtonListener;\n  click: MouseButtonListener;\n  zoomIn: Zoom;\n  zoomOut: Zoom;\n}\n\nclass Controls {\n  private coordinates: Coordinates | null;\n  private touchZoomDistance: number;\n  private readonly drag: MouseButtonListener;\n  private readonly click: MouseButtonListener;\n  private readonly zoomIn: Zoom;\n  private readonly zoomOut: Zoom;\n\n  public constructor({ domObject, drag, click, zoomIn, zoomOut }: ControlsOpts) {\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n    this.drag = drag;\n    this.zoomIn = zoomIn;\n    this.zoomOut = zoomOut;\n    this.click = click;\n\n    domObject.addEventListener('wheel', this.mouseWheelHandler);\n\n    domObject.addEventListener('mousedown', this.downHandler);\n    domObject.addEventListener('mousemove', this.moveHandler);\n    domObject.addEventListener('mouseup', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.downHandler);\n    domObject.addEventListener('touchmove', this.moveHandler);\n    domObject.addEventListener('touchend', this.endHandler);\n\n    domObject.addEventListener('touchstart', this.zoomStartHandler);\n    domObject.addEventListener('touchmove', this.zoomMoveHandler);\n  }\n\n  private zoomStartHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    this.touchZoomDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n  };\n\n  private zoomMoveHandler = (e: TouchEvent): void => {\n    if (!this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n    const newDistance = Math.hypot(\n      e.touches[0].pageX - e.touches[1].pageX,\n      e.touches[0].pageY - e.touches[1].pageY\n    );\n\n    const delta = newDistance - this.touchZoomDistance;\n    console.log(delta);\n    if (Math.abs(delta) > 10) {\n      if (delta < 0) {\n        this.zoomOut();\n      } else {\n        this.zoomIn();\n      }\n\n      this.touchZoomDistance = newDistance;\n    }\n  };\n\n  private mouseWheelHandler = (e: WheelEvent): void => {\n    e.preventDefault();\n    let delta = Math.max(-1, Math.min(1, -e.deltaY));\n\n    if (delta < 0 && this.zoomOut) {\n      this.zoomOut();\n    } else if (this.zoomIn) {\n      this.zoomIn();\n    }\n  };\n\n  private getCoordinates = (e: CoordinateEvent): { x: number; y: number } => {\n    if (e instanceof MouseEvent) {\n      return { x: e.clientX, y: e.clientY };\n    }\n\n    return { x: e.touches[0].pageX, y: e.touches[0].pageY };\n  };\n\n  private downHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    this.coordinates = {\n      startX: x,\n      startY: y,\n      currentX: x,\n      currentY: y,\n    };\n  };\n\n  private moveHandler = (e: CoordinateEvent): void => {\n    if (this.isTwoTouches(e)) {\n      return;\n    }\n\n    e.preventDefault();\n\n    const { x, y } = this.getCoordinates(e);\n\n    if (!this.isInteractionStarted(this.coordinates)) return;\n\n    if (this.drag) {\n      this.drag(x - this.coordinates.currentX, y - this.coordinates.currentY);\n    }\n\n    this.coordinates.currentX = x;\n    this.coordinates.currentY = y;\n  };\n\n  private endHandler = (e: CoordinateEvent): void => {\n    e.preventDefault();\n\n    if (this.isClicked(this.coordinates)) {\n      if (this.click) this.click(this.coordinates.currentX, this.coordinates.currentY);\n    }\n\n    this.coordinates = null;\n    this.touchZoomDistance = 0;\n  };\n\n  private isClicked = (coordinates: Coordinates | null): coordinates is Coordinates =>\n    this.isInteractionStarted(coordinates) &&\n    !this.isDrag(coordinates) &&\n    this.click &&\n    !this.touchZoomDistance;\n\n  private isInteractionStarted = (coordinates: Coordinates | null): coordinates is Coordinates =>\n    !!coordinates;\n\n  private isDrag = (coordinates: Coordinates): boolean =>\n    Math.abs(coordinates.startX - coordinates.currentX) > 3 ||\n    Math.abs(coordinates.startY - coordinates.currentY) > 3;\n\n  private isTwoTouches = (e: CoordinateEvent): boolean => {\n    return get(e, 'touches.length') === 2;\n  };\n}\n\nexport default Controls;\n","interface ColorMap {\n  [key: string]: number;\n}\n\nconst colorMap: ColorMap = {\n  PE: 1,\n  BF: 2,\n  FR: 3,\n  LY: 4,\n  BY: 5,\n  PK: 6,\n  ID: 7,\n  YE: 8,\n  MG: 9,\n  BO: 10,\n  CI: 11,\n  DZ: 12,\n  CH: 13,\n  CM: 14,\n  MK: 15,\n  BW: 16,\n  UA: 17,\n  KE: 18,\n  TW: 19,\n  JO: 20,\n  MX: 21,\n  AE: 22,\n  BZ: 23,\n  BR: 24,\n  SL: 25,\n  ML: 26,\n  CD: 27,\n  IT: 28,\n  SO: 29,\n  AF: 30,\n  BD: 31,\n  DO: 32,\n  GW: 33,\n  GH: 34,\n  AT: 35,\n  SE: 36,\n  TR: 37,\n  UG: 38,\n  MZ: 39,\n  JP: 40,\n  NZ: 41,\n  CU: 42,\n  VE: 43,\n  PT: 44,\n  CO: 45,\n  MR: 46,\n  AO: 47,\n  DE: 48,\n  SD: 49,\n  TH: 50,\n  AU: 51,\n  PG: 52,\n  IQ: 53,\n  HR: 54,\n  GL: 55,\n  NE: 56,\n  DK: 57,\n  LV: 58,\n  RO: 59,\n  ZM: 60,\n  IR: 61,\n  MM: 62,\n  ET: 63,\n  GT: 64,\n  SR: 65,\n  EH: 66,\n  CZ: 67,\n  TD: 68,\n  AL: 69,\n  FI: 70,\n  SY: 71,\n  KG: 72,\n  SB: 73,\n  OM: 74,\n  PA: 75,\n  AR: 76,\n  GB: 77,\n  CR: 78,\n  PY: 79,\n  GN: 80,\n  IE: 81,\n  NG: 82,\n  TN: 83,\n  PL: 84,\n  NA: 85,\n  ZA: 86,\n  EG: 87,\n  TZ: 88,\n  GE: 89,\n  SA: 90,\n  VN: 91,\n  RU: 92,\n  HT: 93,\n  BA: 94,\n  IN: 95,\n  CN: 96,\n  CA: 97,\n  SV: 98,\n  GY: 99,\n  BE: 100,\n  GQ: 101,\n  LS: 102,\n  BG: 103,\n  BI: 104,\n  DJ: 105,\n  AZ: 106,\n  MY: 107,\n  PH: 108,\n  UY: 109,\n  CG: 110,\n  RS: 111,\n  ME: 112,\n  EE: 113,\n  RW: 114,\n  AM: 115,\n  SN: 116,\n  TG: 117,\n  ES: 118,\n  GA: 119,\n  HU: 120,\n  MW: 121,\n  TJ: 122,\n  KH: 123,\n  KR: 124,\n  HN: 125,\n  IS: 126,\n  NI: 127,\n  CL: 128,\n  MA: 129,\n  LR: 130,\n  NL: 131,\n  CF: 132,\n  SK: 133,\n  LT: 134,\n  ZW: 135,\n  LK: 136,\n  IL: 137,\n  LA: 138,\n  KP: 139,\n  GR: 140,\n  TM: 141,\n  EC: 142,\n  BJ: 143,\n  SI: 144,\n  NO: 145,\n  MD: 146,\n  LB: 147,\n  NP: 148,\n  ER: 149,\n  US: 150,\n  KZ: 151,\n  AQ: 152,\n  SZ: 153,\n  UZ: 154,\n  MN: 155,\n  BT: 156,\n  NC: 157,\n  FJ: 158,\n  KW: 159,\n  TL: 160,\n  BS: 161,\n  VU: 162,\n  FK: 163,\n  GM: 164,\n  QA: 165,\n  JM: 166,\n  CY: 167,\n  PR: 168,\n  PS: 169,\n  BN: 170,\n  TT: 171,\n  CV: 172,\n  PF: 173,\n  WS: 174,\n  LU: 175,\n  KM: 176,\n  MU: 177,\n  FO: 178,\n  ST: 179,\n  AN: 180,\n  DM: 181,\n  TO: 182,\n  KI: 183,\n  FM: 184,\n  BH: 185,\n  AD: 186,\n  MP: 187,\n  PW: 188,\n  SC: 189,\n  AG: 190,\n  BB: 191,\n  TC: 192,\n  VC: 193,\n  LC: 194,\n  YT: 195,\n  VI: 196,\n  GD: 197,\n  MT: 198,\n  MV: 199,\n  KY: 200,\n  KN: 201,\n  MS: 202,\n  BL: 203,\n  NU: 204,\n  PM: 205,\n  CK: 206,\n  WF: 207,\n  AS: 208,\n  MH: 209,\n  AW: 210,\n  LI: 211,\n  VG: 212,\n  SH: 213,\n  JE: 214,\n  AI: 215,\n  MF_1_: 216,\n  GG: 217,\n  SM: 218,\n  BM: 219,\n  TV: 220,\n  NR: 221,\n  GI: 222,\n  PN: 223,\n  MC: 224,\n  VA: 225,\n  IM: 226,\n  GU: 227,\n  SG: 228,\n};\n\nexport default colorMap;\n","import CountrySelect from './CountrySelect';\n\nexport default CountrySelect;\n","import countryColorMap from './countryColorMap';\nimport * as THREE from 'three';\nimport { CountryChangeCallback, Uniforms } from '../types';\nimport findKey from 'lodash/findKey';\n\ninterface CountrySelectParams {\n  scene: THREE.Scene;\n  renderer: THREE.WebGLRenderer;\n  mapUniforms: Uniforms;\n  lookupContext: CanvasRenderingContext2D;\n  lookupTexture: THREE.Texture;\n  camera: THREE.PerspectiveCamera;\n  onCountryChange: CountryChangeCallback;\n}\n\nclass CountrySelect {\n  private renderer: THREE.WebGLRenderer;\n  private readonly lookupContext: CanvasRenderingContext2D;\n  private readonly camera: THREE.PerspectiveCamera;\n  private lookupTexture: THREE.Texture;\n  private readonly scene: THREE.Scene;\n  private mapUniforms: Uniforms;\n  private previousColorIndex: number;\n  private readonly onCountryChange: CountryChangeCallback;\n\n  public constructor({\n    scene,\n    renderer,\n    mapUniforms,\n    lookupContext,\n    lookupTexture,\n    camera,\n    onCountryChange,\n  }: CountrySelectParams) {\n    this.scene = scene;\n    this.renderer = renderer;\n    this.mapUniforms = mapUniforms;\n    this.lookupContext = lookupContext;\n    this.lookupTexture = lookupTexture;\n    this.camera = camera;\n    this.previousColorIndex = 0;\n    this.onCountryChange = onCountryChange;\n\n    this.highlightOcean();\n  }\n\n  public onCountryClick = (x: number, y: number): void => {\n    this.cleanupContext();\n\n    const { mouseX, mouseY } = this.getMouseCoordinates(x, y);\n    const pickedColorIndex = this.getPickColor(mouseX, mouseY) || this.previousColorIndex;\n\n    if (pickedColorIndex) {\n      // save color index for the click on ocean\n      this.previousColorIndex = pickedColorIndex;\n\n      const countryCode = findKey(\n        countryColorMap,\n        (countryColorIndex): boolean => countryColorIndex === pickedColorIndex\n      );\n\n      if (countryCode) {\n        this.highlightCountry(countryCode);\n        this.onCountryChange(countryCode);\n      }\n    }\n\n    this.highlightOcean();\n  };\n\n  private getMouseCoordinates(x: number, y: number): { mouseX: number; mouseY: number } {\n    let canvas = this.renderer.context.canvas;\n\n    let mouseX = x - canvas.offsetLeft;\n    let mouseY = -y + canvas.height + canvas.offsetTop;\n\n    return { mouseX, mouseY };\n  }\n\n  private getPickColor(mouseX: number, mouseY: number): number {\n    this.mapUniforms['outlineLevel'].value = 0;\n\n    this.renderer.clear();\n    this.renderer.render(this.scene, this.camera);\n\n    let gl = this.renderer.context;\n\n    let buf = new Uint8Array(4);\n    gl.readPixels(mouseX, mouseY, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, buf);\n\n    this.mapUniforms['outlineLevel'].value = 1;\n\n    return buf[0];\n  }\n\n  private cleanupContext(): void {\n    this.lookupContext.clearRect(0, 0, 256, 1);\n    this.lookupTexture.needsUpdate = true;\n  }\n\n  private highlightOcean(): void {\n    let ctx = this.lookupContext;\n    ctx.fillStyle = 'rgb(10,10,10)';\n    ctx.fillRect(0, 0, 1, 1);\n    this.lookupTexture.needsUpdate = true;\n  }\n\n  private highlightCountry(countryCode?: string): void {\n    this.cleanupContext();\n\n    if (countryCode) {\n      let colorIndex = countryColorMap[countryCode];\n\n      let ctx = this.lookupContext;\n\n      ctx.fillStyle = '#eeeeee';\n      ctx.fillRect(colorIndex, 0, 1, 1);\n    }\n\n    this.lookupTexture.needsUpdate = true;\n  }\n}\n\nexport default CountrySelect;\n","import Controls from '../controls';\nimport CountrySelect from './country-select';\n\nimport { CountryChangeCallback } from './types';\nimport GlobeModel from './GlobeModel';\n\ntype RenderFunc = (delta: number, now: number) => void;\n\nconst MAX_ZOOM = 1;\nconst MIN_ZOOM = 4;\n\nclass GlobeController {\n  private readonly globeModel: GlobeModel;\n  private readonly countrySelect: CountrySelect;\n  private lastTimeMs: number | null;\n  private renderFuncs: RenderFunc[];\n\n  public constructor(globeModel: GlobeModel, onCountryChange: CountryChangeCallback) {\n    this.globeModel = globeModel;\n    this.lastTimeMs = null;\n    this.renderFuncs = [];\n\n    this.countrySelect = new CountrySelect({\n      scene: this.globeModel.scene,\n      lookupContext: this.globeModel.lookupContext,\n      lookupTexture: this.globeModel.lookupTexture,\n      mapUniforms: this.globeModel.mapUniforms,\n      renderer: this.globeModel.renderer,\n      camera: this.globeModel.camera,\n      onCountryChange,\n    });\n\n    new Controls({\n      domObject: this.globeModel.container,\n      drag: this.drag,\n      click: this.countrySelect.onCountryClick,\n      zoomIn: this.zoomIn,\n      zoomOut: this.zoomOut,\n    });\n\n    window.addEventListener('resize', this.resize);\n\n    this.renderFuncs.push(this.rotate);\n\n    this.renderFuncs.push(this.render);\n  }\n\n  private resize = (): void => {\n    const { renderer, camera, container } = this.globeModel;\n    camera.aspect = container.clientWidth / container.clientHeight;\n    camera.updateProjectionMatrix();\n    renderer.setSize(container.clientWidth, container.clientHeight);\n  };\n\n  private drag = (deltaX: number, deltaY: number): void => {\n    let radPerPixel = Math.PI / 450,\n      deltaPhi = radPerPixel * deltaX,\n      deltaTheta = radPerPixel * deltaY,\n      pos = this.globeModel.camera.position.sub(this.globeModel.center),\n      radius = pos.length(),\n      theta = Math.acos(pos.z / radius),\n      phi = Math.atan2(pos.y, pos.x);\n\n    // Subtract deltaTheta and deltaPhi\n    theta = Math.min(Math.max(theta - deltaTheta, 0), Math.PI);\n    phi -= deltaPhi;\n\n    // Turn back into Cartesian coordinates\n    pos.x = radius * Math.sin(theta) * Math.cos(phi);\n    pos.y = radius * Math.sin(theta) * Math.sin(phi);\n    pos.z = radius * Math.cos(theta);\n\n    this.globeModel.camera.position.add(this.globeModel.center);\n    this.globeModel.camera.lookAt(this.globeModel.center);\n  };\n\n  private zoomIn = (): void => {\n    if (this.globeModel.camera.position.length() > MAX_ZOOM) {\n      this.globeModel.camera.position\n        .sub(this.globeModel.center)\n        .multiplyScalar(0.99)\n        .add(this.globeModel.center);\n    }\n  };\n\n  private zoomOut = (): void => {\n    if (this.globeModel.camera.position.length() < MIN_ZOOM) {\n      this.globeModel.camera.position\n        .sub(this.globeModel.center)\n        .multiplyScalar(1.01)\n        .add(this.globeModel.center);\n    }\n  };\n\n  private rotate = (delta: number): void => {\n    this.globeModel.globeMesh.rotateZ((1 / 32) * delta);\n  };\n\n  public addRenderFunc(func: RenderFunc): void {\n    this.renderFuncs.push(func);\n  }\n\n  private render = (): void => {\n    const { renderer, scene, camera } = this.globeModel;\n    renderer.render(scene, camera);\n  };\n\n  private animate = (nowMs: number): void => {\n    // measure time\n    this.lastTimeMs = this.lastTimeMs || nowMs - 1000 / 60;\n    const deltaMs = Math.min(200, nowMs - this.lastTimeMs);\n    this.lastTimeMs = nowMs;\n    // call each update\n    this.renderFuncs.forEach(\n      (renderFunc: RenderFunc): void => {\n        renderFunc(deltaMs / 1000, nowMs / 1000);\n      }\n    );\n\n    // keep looping\n    requestAnimationFrame(this.animate);\n  };\n\n  public show(): void {\n    requestAnimationFrame(this.animate);\n  }\n}\n\nexport default GlobeController;\n","import Globe from './Globe';\nexport default Globe;\n","import React, { PureComponent, ReactNode, RefObject } from 'react';\nimport Marker from '../marker';\nimport GlobeModel from './GlobeModel';\nimport GlobeModelFactory from './GlobeModelFactory';\nimport GlobeController from './GlobeController';\n\ninterface State {\n  country: string | null;\n}\n\nclass Globe extends PureComponent<{}, State> {\n  private globeModel?: GlobeModel;\n  private globeController?: GlobeController;\n  private readonly mainRef: RefObject<HTMLElement>;\n  private readonly markerRef: RefObject<Marker>;\n\n  public constructor(props: {}) {\n    super(props);\n\n    this.mainRef = React.createRef();\n    this.markerRef = React.createRef();\n    this.state = { country: null };\n  }\n\n  public componentDidMount(): void {\n    if (this.mainRef.current) {\n      this.globeModel = GlobeModelFactory.init(this.mainRef.current);\n      this.globeController = new GlobeController(this.globeModel, this.setCountry);\n      this.globeController.addRenderFunc(this.updateMarker);\n      this.globeController.show();\n    }\n  }\n\n  private setCountry = (country: string): void => this.setState({ country });\n\n  private updateMarker = (): void => {\n    if (this.mainRef.current && this.markerRef.current && this.globeModel) {\n      this.markerRef.current.update(\n        this.globeModel.camera,\n        this.globeModel.globeMesh,\n        this.mainRef.current\n      );\n    }\n  };\n\n  public render(): ReactNode {\n    const { country } = this.state;\n    return (\n      <>\n        <main ref={this.mainRef} />\n        {country && <Marker countryCode={country} ref={this.markerRef} />}\n      </>\n    );\n  }\n}\n\nexport default Globe;\n","import React, { ReactElement } from 'react';\nimport style from './app.module.css';\nimport Globe from './components/globe';\n\nfunction App(): ReactElement {\n  return (\n    <div className={style.app}>\n      <Globe />\n    </div>\n  );\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__cewju\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"marker\":\"marker_marker__3ll21\"};"],"sourceRoot":""}